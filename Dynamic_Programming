#include <stdio.h>
#include <time.h>

int fibDC(int n) {
    if (n <= 1)
        return n;
    return fibDC(n - 1) + fibDC(n - 2);
}

int fibDP(int n) {
    if (n <= 1)
        return n;
   
    int fib[n + 1];
    fib[0] = 0;
    fib[1] = 1;
   
    for (int i = 2; i <= n; i++)
        fib[i] = fib[i - 1] + fib[i - 2];
   
    return fib[n];
}

int main() {
    int n;
    printf("Enter the value of n for Fibonacci calculation: ");
    scanf("%d", &n);
   
    clock_t start, end;
    double cpu_time_used;
   
    start = clock();
    end = clock();
    cpu_time_used = ((double) (end - start)) / CLOCKS_PER_SEC;
    printf("Fibonacci series is: ");
    for(int i=0;i<=n;i++)
        printf("%d ",fibDC(i));
    printf("\nTime taken by Divide and Conquer: %f seconds\n", cpu_time_used);
   
    start = clock();
    end = clock();
    cpu_time_used = ((double) (end - start)) / CLOCKS_PER_SEC;
    printf("Fibonacci series is: ");
    for(int i=0;i<=n;i++)
        printf("%d ",fibDP(i));
    printf("\nTime taken by Dynamic Programming: %f seconds\n", cpu_time_used);
   
    return 0;
}
